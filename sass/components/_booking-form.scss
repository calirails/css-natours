.booking {
    // padding: 10rem 0;
    // height: 12rem; // temporary to have space to work with;
    background-image: linear-gradient(105deg, rgba($color-white, .9) 0%, rgba($color-medium-gray, .9) 50%, transparent 50%), url(../img/nat-10.jpg);
    background-size: cover;
    // background-size: 100%; // similar but oddly wraps unlike `background-size: cover;`    
}

.booking-form {
    position: relative;
    width: 50%;
    padding: 2rem 2rem 10rem 2rem;

    &__group:not(:last-child) {
        position: relative;
        margin-bottom: 3rem;
    }

    &__label {
        font-size: 1.4rem;
        font-weight: 500;
        /* `display: block` required for margin-left/top  so these next three props are to move label underneath placeholder text */
        display: block;
        margin-left: 2rem;
        // margin-top: -8rem;
        transition: all .2s;
    }
    
    &__input {
        font-family: inherit; // Input Text controls have a browser font defaults so we must instruct it to inherit our `Lato` font-family declared in body{ } CSS
        font-size: 1.4rem;
        padding: .5rem 2rem;
        background-color: rgba($color-white, .5);
        border: none;
        border-bottom: 4px solid transparent; // transparent to hide until it gets the `:focus` pseudo class is activated
        width: 90%;
        display: block;
        color: inherit;
        transition: all 1.2s;

        &::-webkit-input-placeholder {
            color: $color-dark-gray;
        }

        &:focus {
            outline: none; // removes the default blue outline
            box-shadow: 0 1rem 2rem rgba($color-black, .4);
            border-bottom: 4px solid $color-primary;
        }

        &:focus:invalid {
            color: $color-secondary-dark;
            border-bottom: 4px solid $color-secondary-dark;
        }
    }

    /* 
        NOTE!!: Even though this rule is triggered on the input :placeholder-shown state, it's not embedded in the &__input. This is 
                because we are styling the __label rather than the input itself.
        Use: adjacent sibling, i.e `+` selector. 
        This reads as: 'whenever the input's placeholder text is shown, i.e. visible, select the direct sibling with class booking-form_label and apply these styles`
    */
    &__input:placeholder-shown + &__label {
        opacity: 0;
        visibility: hidden;
        transform: translateY(-4rem);
    }


    &__radio-group {
        position: relative;
        display: inline-block;
        width: 32%;
    }

    &__radio-label {
        position: relative;
        padding-left: 2.5rem;
        font-size: $default-font-size;
        cursor: pointer;
    }

    &__radio-input {
        display: none;
    }

    /* create custom round concentric radio buttons */
    &__radio-custom-button {
        display: inline-block;
        height: 2rem;
        width: 2rem;
        border: 3px solid $color-primary;
        border-radius: 50%;
        position: absolute;
        left: 0;
        top: -.3rem;

        /* drawing inner circle. Note: it's hidden until selected */
        &::after {
            content: '';
            display: block;
            height: 1rem;
            width: 1rem;
            border-radius: 50%;
            position: absolute;
            left: 50%;
            top: 50%;
            transform: translate(-50%, -50%);
            background-color: $color-primary-dark;
            opacity: 0;
            transition: opacity .2s;
        }
    }

    /* as soon as radio input is checked, grab adjacent or direct (either works in this case) sibling's child, and give it opacity=1 to make it looked selected */
    &__radio-input:checked ~ &__radio-label &__radio-custom-button::after {
        opacity: 1;    
    }
}