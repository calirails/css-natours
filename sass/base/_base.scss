/* base SASS file */
/* Universal Selector to reset default browser margins and padding */
*,
*::before,
*::after {
    margin: 0;
    padding: 0;
    box-sizing: border-box
}

html {
    /* 
        IMPORTANT: Best Practice, we set font-size as the fundamental unit size (in percentage, more on that later)
                    and use `rem` or `em` in all of our CSS styles for sizing. To scale everything on the page proportionately
                    larger or smaller, we can just then change this base font-size rather than each and every
                    related style, which would be very unwieldy, and error prone if we are trying to keep its relative scale!
        NOTE: 
        1. By default font-size is 16px unless overriden
        2. User overrides are those set by users in their browser, and those 
                are different from developer overrides in Developer Tools
        
        NOW: Rather than specifying a font-size override of 10px, we use a percentage
                as a Best Practice to enable the page to scale up/down if & when users have 
                custom overrides in their preferences.
    */
    font-size: 62.5%; // this sets 1rem as 10px, i.e. 62.5% of default W3C browser font-size of 16px, because 10/16 = 62.5%
    /* RE: Screen Sizes
    Note: we are using Desktop first, rather than Mobile first mode. With that, we are doing the following:
    1. Designating 1200-1800 as the default desktop range
    2. Using max-width for screen sizes smaller than default desktop range
    3. Using min-width for screen sizes larger than default desktop range

    a. 0px    - 640px : phone-mode
    b. 640px  - 900px : tablet-portrait-mode
    c. 900px  - 1200px: tablet-landscape-mode
    d. 1200px - 1800px: desktop-mode
    e. 1800px - larger: wide-desktop-mode

    Note: @content is a special directive and is set to the calling nested block
    Warning: multiple media queries can be matched, and the last overrides so sequence mattters
                so we must sequence the most restrictive condition last so it prevails -- overrides earlier least restrictive matcher
    */
    /* Use our paramaterized mixin to scale our default base font-size to relatively scale our base rem & em units */
    @include responsive-content(wide-desktop-mode) { font-size: 75%; // to make 1rem equivalent to 12px b/c 75% = 12/16
    }
    @include responsive-content(desktop-mode) { font-size: 62.5%; // to make 1rem equivalent to 10px b/c 75% = 10/16
    }
    @include responsive-content(tablet-landscape-mode) { font-size: 56.25%; // to make 1rem equivalent to 9px b/c 50% = 9/16
    }
    @include responsive-content(tablet-portrait-mode) { font-size: 50%; // to make 1rem equivalent to 8px b/c 50% = 8/16
    }
    @include responsive-content(phone-mode) { font-size: 45%; // to make 1rem equivalent to 4px b/c 50% = 4/16
    }
}

body {
    // this is a life-saver to ensure its sizing is respected as specified rather than growing based on its content
    box-sizing: border-box;
    padding: 1rem;

    @include responsive-content(tablet-portrait-mode) {
        padding: 0;
    }
}
